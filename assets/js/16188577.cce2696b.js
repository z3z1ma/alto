"use strict";(self.webpackChunkalto_docs=self.webpackChunkalto_docs||[]).push([[657],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>f});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),u=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},p=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=u(a),m=r,f=c["".concat(s,".").concat(m)]||c[m]||d[m]||o;return a?n.createElement(f,i(i({ref:t},p),{},{components:a})):n.createElement(f,i({ref:t},p))}));function f(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:r,i[1]=l;for(var u=2;u<o;u++)i[u]=a[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},5162:(e,t,a)=>{a.d(t,{Z:()=>i});var n=a(7294),r=a(6010);const o={tabItem:"tabItem_Ymn6"};function i(e){let{children:t,hidden:a,className:i}=e;return n.createElement("div",{role:"tabpanel",className:(0,r.Z)(o.tabItem,i),hidden:a},t)}},4866:(e,t,a)=>{a.d(t,{Z:()=>_});var n=a(7462),r=a(7294),o=a(6010),i=a(2466),l=a(6550),s=a(1980),u=a(7392),p=a(12);function c(e){return function(e){return r.Children.map(e,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))}(e).map((e=>{let{props:{value:t,label:a,attributes:n,default:r}}=e;return{value:t,label:a,attributes:n,default:r}}))}function d(e){const{values:t,children:a}=e;return(0,r.useMemo)((()=>{const e=t??c(a);return function(e){const t=(0,u.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,a])}function m(e){let{value:t,tabValues:a}=e;return a.some((e=>e.value===t))}function f(e){let{queryString:t=!1,groupId:a}=e;const n=(0,l.k6)(),o=function(e){let{queryString:t=!1,groupId:a}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:t,groupId:a});return[(0,s._X)(o),(0,r.useCallback)((e=>{if(!o)return;const t=new URLSearchParams(n.location.search);t.set(o,e),n.replace({...n.location,search:t.toString()})}),[o,n])]}function g(e){const{defaultValue:t,queryString:a=!1,groupId:n}=e,o=d(e),[i,l]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const n=a.find((e=>e.default))??a[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:o}))),[s,u]=f({queryString:a,groupId:n}),[c,g]=function(e){let{groupId:t}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(t),[n,o]=(0,p.Nk)(a);return[n,(0,r.useCallback)((e=>{a&&o.set(e)}),[a,o])]}({groupId:n}),h=(()=>{const e=s??c;return m({value:e,tabValues:o})?e:null})();(0,r.useLayoutEffect)((()=>{h&&l(h)}),[h]);return{selectedValue:i,selectValue:(0,r.useCallback)((e=>{if(!m({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);l(e),u(e),g(e)}),[u,g,o]),tabValues:o}}var h=a(2389);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function y(e){let{className:t,block:a,selectedValue:l,selectValue:s,tabValues:u}=e;const p=[],{blockElementScrollPositionUntilNextRender:c}=(0,i.o5)(),d=e=>{const t=e.currentTarget,a=p.indexOf(t),n=u[a].value;n!==l&&(c(t),s(n))},m=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const a=p.indexOf(e.currentTarget)+1;t=p[a]??p[0];break}case"ArrowLeft":{const a=p.indexOf(e.currentTarget)-1;t=p[a]??p[p.length-1];break}}t?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":a},t)},u.map((e=>{let{value:t,label:a,attributes:i}=e;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:l===t?0:-1,"aria-selected":l===t,key:t,ref:e=>p.push(e),onKeyDown:m,onClick:d},i,{className:(0,o.Z)("tabs__item",b.tabItem,i?.className,{"tabs__item--active":l===t})}),a??t)})))}function k(e){let{lazy:t,children:a,selectedValue:n}=e;if(a=Array.isArray(a)?a:[a],t){const e=a.find((e=>e.props.value===n));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},a.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==n}))))}function v(e){const t=g(e);return r.createElement("div",{className:(0,o.Z)("tabs-container",b.tabList)},r.createElement(y,(0,n.Z)({},e,t)),r.createElement(k,(0,n.Z)({},e,t)))}function _(e){const t=(0,h.Z)();return r.createElement(v,(0,n.Z)({key:String(t)},e))}},6632:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>f,frontMatter:()=>l,metadata:()=>u,toc:()=>c});var n=a(7462),r=(a(7294),a(3905)),o=a(4866),i=a(5162);const l={},s="Target Configuration",u={unversionedId:"tutorial-basics/target-configuration",id:"tutorial-basics/target-configuration",title:"Target Configuration",description:"Adding a new target to your project is as simple as adding a new key to the targets section of the alto.toml file. The key is a user defined name for the tap and the value is a dictionary of configuration options for that tap.",source:"@site/docs/tutorial-basics/target-configuration.mdx",sourceDirName:"tutorial-basics",slug:"/tutorial-basics/target-configuration",permalink:"/alto/docs/tutorial-basics/target-configuration",draft:!1,editUrl:"https://github.com/z3z1ma/alto/tree/main/docs/docs/tutorial-basics/target-configuration.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Tap Configuration",permalink:"/alto/docs/tutorial-basics/tap-configuration"},next:{title:"Utility Configuration",permalink:"/alto/docs/tutorial-basics/utility-configuration"}},p={},c=[{value:"Example Target Configuration",id:"example-target-configuration",level:2},{value:"Settings",id:"settings",level:2},{value:"<code>pip_url</code>",id:"pip_url",level:3},{value:"<code>config</code>",id:"config",level:3},{value:"<code>executable</code> and <code>entrypoint</code>",id:"executable-and-entrypoint",level:3},{value:"<code>environment</code>",id:"environment",level:3}],d={toc:c},m="wrapper";function f(e){let{components:t,...a}=e;return(0,r.kt)(m,(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"target-configuration"},"Target Configuration"),(0,r.kt)("p",null,"Adding a new target to your project is ",(0,r.kt)("strong",{parentName:"p"},"as simple as adding a new key")," to the ",(0,r.kt)("inlineCode",{parentName:"p"},"targets")," section of the ",(0,r.kt)("inlineCode",{parentName:"p"},"alto.toml")," file. The key is a user defined name for the tap and the value is a dictionary of configuration options for that tap."),(0,r.kt)("h2",{id:"example-target-configuration"},"Example Target Configuration"),(0,r.kt)("p",null,"Here is a mock example of 2 target configurations, as you can see it can be quite concise:"),(0,r.kt)(o.Z,{mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"toml",label:"TOML",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-toml",metastring:'title="alto.toml"',title:'"alto.toml"'},'[default.targets.target-jsonl]\npip_url = "target-jsonl"\nconfig.output = "@format output/{this.load_path}"\nconfig.do_timestamp_file = true\n\n[default.targets.target-parquet]\npip_url = "git+hhttps://github.com/estrategiahq/target-parquet.git#egg=target-parquet"\nconfig.destination_path = "@format output/{this.load_path}"\nconfig.file_size = 100000\nconfig.compression_method = "snappy"\nconfig.streams_in_separate_folder = true\nconfig.add_record_metadata = true\n'))),(0,r.kt)(i.Z,{value:"yaml",label:"YAML",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="alto.yaml"',title:'"alto.yaml"'},'default:\n  targets:\n    target-jsonl:\n      pip_url: target-jsonl\n      config:\n        output: "@format output/{this.load_path}"\n        do_timestamp_file: true\n    target-parquet:\n      pip_url: "git+https://github.com/estrategiahq/target-parquet.git#egg=target-parquet"\n      config:\n        destination_path: "@format output/{this.load_path}"\n        file_size: 100000\n        compression_method: snappy\n        streams_in_separate_folder: true\n        add_record_metadata: true\n'))),(0,r.kt)(i.Z,{value:"json",label:"JSON",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="alto.json"',title:'"alto.json"'},'{\n  "default": {\n    "targets": {\n      "target-jsonl": {\n        "pip_url": "target-jsonl",\n        "config": {\n          "output": "@format output/{this.load_path}",\n          "do_timestamp_file": true\n        }\n      },\n      "target-parquet": {\n        "pip_url": "git+hhps://github.com/estrategiahq/target-parquet.git#egg=target-parquet",\n        "config": {\n          "destination_path": "@format output/{this.load_path}",\n          "file_size": 100000,\n          "compression_method": "snappy",\n          "streams_in_separate_folder": true,\n          "add_record_metadata": true\n        }\n      }\n    }\n  }\n}\n')))),(0,r.kt)("p",null,"Below, we will go over each of the configuration options for a target."),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"settings"},"Settings"),(0,r.kt)("h3",{id:"pip_url"},(0,r.kt)("inlineCode",{parentName:"h3"},"pip_url")),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"pip_url")," is the pip installable URL of the target. This is the same URL that you would use to install the target via ",(0,r.kt)("inlineCode",{parentName:"p"},"pip install"),". This is the only required field for a target configuration."),(0,r.kt)("admonition",{title:"Tip",type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"Remember pip installable URLs can be a local path to a directory, tarball, zip file, or a git repo. Anything that can be used by ",(0,r.kt)("inlineCode",{parentName:"p"},"pip")," can be used by ",(0,r.kt)("inlineCode",{parentName:"p"},"alto"),".")),(0,r.kt)("h3",{id:"config"},(0,r.kt)("inlineCode",{parentName:"h3"},"config")),(0,r.kt)("p",null,"This is the configuration for the target. This is exactly what you would put in the ",(0,r.kt)("inlineCode",{parentName:"p"},"config.json")," if running the target manually. The only difference is that you can use the ",(0,r.kt)("inlineCode",{parentName:"p"},"@format")," directive to reference environment variables and other config values via ",(0,r.kt)("inlineCode",{parentName:"p"},"this"),". This is useful for sensitive information like passwords and API keys. Both the Meltano Hub and most github repos will tell you exactly what to put here."),(0,r.kt)("h3",{id:"executable-and-entrypoint"},(0,r.kt)("inlineCode",{parentName:"h3"},"executable")," and ",(0,r.kt)("inlineCode",{parentName:"h3"},"entrypoint")),(0,r.kt)("p",null,"By default, ",(0,r.kt)("inlineCode",{parentName:"p"},"alto")," will assume that the target exposes a script named after the target key name in the alto config. For example, if the target is named ",(0,r.kt)("inlineCode",{parentName:"p"},"target-snowflake"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"alto")," will assume that the target exposes a script named ",(0,r.kt)("inlineCode",{parentName:"p"},"target-snowflake"),". If this is not the case, you can specify the ",(0,r.kt)("inlineCode",{parentName:"p"},"executable")," explicitly. You can alternatively specify the ",(0,r.kt)("inlineCode",{parentName:"p"},"entrypoint")," if the package does not expose a script or you want to use something other than the default."),(0,r.kt)("admonition",{title:"Tip",type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"Up until now, we have always used ",(0,r.kt)("inlineCode",{parentName:"p"},"target-name")," as the name of our plugins. This is convenient because often it means we don't have to specifiy the ",(0,r.kt)("inlineCode",{parentName:"p"},"executable")," however there is ",(0,r.kt)("strong",{parentName:"p"},"nothing")," stopping you from using a completely different name. You could call a target ",(0,r.kt)("strong",{parentName:"p"},"prod_db")," or ",(0,r.kt)("strong",{parentName:"p"},"stg_db")," or ",(0,r.kt)("strong",{parentName:"p"},"local_csvs"),". It doesn't matter. As long as you specify the ",(0,r.kt)("inlineCode",{parentName:"p"},"executable")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"entrypoint")," correctly, ",(0,r.kt)("inlineCode",{parentName:"p"},"alto")," will be able to run it. It also means commands might be more meaningful to you and your team."),(0,r.kt)("p",{parentName:"admonition"},"IE, ",(0,r.kt)("inlineCode",{parentName:"p"},"alto pg_platform_data:sf_staging_db")," may be more meaningful than ",(0,r.kt)("inlineCode",{parentName:"p"},"alto tap-postgres:target-snowflake"),".")),(0,r.kt)("h3",{id:"environment"},(0,r.kt)("inlineCode",{parentName:"h3"},"environment")),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"environment")," field is a dictionary of environment variables that will be set when running the target. It is fully scoped to the target and will not affect other processes."))}f.isMDXComponent=!0}}]);