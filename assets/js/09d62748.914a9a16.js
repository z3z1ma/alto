"use strict";(self.webpackChunkalto_docs=self.webpackChunkalto_docs||[]).push([[508],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),u=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},m="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=u(n),d=r,f=m["".concat(s,".").concat(d)]||m[d]||p[d]||o;return n?a.createElement(f,l(l({ref:t},c),{},{components:n})):a.createElement(f,l({ref:t},c))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[m]="string"==typeof e?e:r,l[1]=i;for(var u=2;u<o;u++)l[u]=n[u];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5162:(e,t,n)=>{n.d(t,{Z:()=>l});var a=n(7294),r=n(6010);const o={tabItem:"tabItem_Ymn6"};function l(e){let{children:t,hidden:n,className:l}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(o.tabItem,l),hidden:n},t)}},4866:(e,t,n)=>{n.d(t,{Z:()=>w});var a=n(7462),r=n(7294),o=n(6010),l=n(2466),i=n(6550),s=n(1980),u=n(7392),c=n(12);function m(e){return function(e){return r.Children.map(e,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:r}}=e;return{value:t,label:n,attributes:a,default:r}}))}function p(e){const{values:t,children:n}=e;return(0,r.useMemo)((()=>{const e=t??m(n);return function(e){const t=(0,u.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function d(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function f(e){let{queryString:t=!1,groupId:n}=e;const a=(0,i.k6)(),o=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,s._X)(o),(0,r.useCallback)((e=>{if(!o)return;const t=new URLSearchParams(a.location.search);t.set(o,e),a.replace({...a.location,search:t.toString()})}),[o,a])]}function h(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,o=p(e),[l,i]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!d({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:o}))),[s,u]=f({queryString:n,groupId:a}),[m,h]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,o]=(0,c.Nk)(n);return[a,(0,r.useCallback)((e=>{n&&o.set(e)}),[n,o])]}({groupId:a}),b=(()=>{const e=s??m;return d({value:e,tabValues:o})?e:null})();(0,r.useLayoutEffect)((()=>{b&&i(b)}),[b]);return{selectedValue:l,selectValue:(0,r.useCallback)((e=>{if(!d({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);i(e),u(e),h(e)}),[u,h,o]),tabValues:o}}var b=n(2389);const y={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function v(e){let{className:t,block:n,selectedValue:i,selectValue:s,tabValues:u}=e;const c=[],{blockElementScrollPositionUntilNextRender:m}=(0,l.o5)(),p=e=>{const t=e.currentTarget,n=c.indexOf(t),a=u[n].value;a!==i&&(m(t),s(a))},d=e=>{let t=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":{const n=c.indexOf(e.currentTarget)+1;t=c[n]??c[0];break}case"ArrowLeft":{const n=c.indexOf(e.currentTarget)-1;t=c[n]??c[c.length-1];break}}t?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":n},t)},u.map((e=>{let{value:t,label:n,attributes:l}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:i===t?0:-1,"aria-selected":i===t,key:t,ref:e=>c.push(e),onKeyDown:d,onClick:p},l,{className:(0,o.Z)("tabs__item",y.tabItem,l?.className,{"tabs__item--active":i===t})}),n??t)})))}function g(e){let{lazy:t,children:n,selectedValue:a}=e;if(n=Array.isArray(n)?n:[n],t){const e=n.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},n.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function k(e){const t=h(e);return r.createElement("div",{className:(0,o.Z)("tabs-container",y.tabList)},r.createElement(v,(0,a.Z)({},e,t)),r.createElement(g,(0,a.Z)({},e,t)))}function w(e){const t=(0,b.Z)();return r.createElement(k,(0,a.Z)({key:String(t)},e))}},7923:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>f,frontMatter:()=>i,metadata:()=>u,toc:()=>m});var a=n(7462),r=(n(7294),n(3905)),o=n(4866),l=n(5162);const i={},s="Secret Management",u={unversionedId:"tutorial-basics/secret-management",id:"tutorial-basics/secret-management",title:"Secret Management",description:"Where do I store secrets?",source:"@site/docs/tutorial-basics/secret-management.mdx",sourceDirName:"tutorial-basics",slug:"/tutorial-basics/secret-management",permalink:"/alto/docs/tutorial-basics/secret-management",draft:!1,editUrl:"https://github.com/z3z1ma/alto/tree/main/docs/docs/tutorial-basics/secret-management.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Environments",permalink:"/alto/docs/tutorial-basics/environments"},next:{title:"Project Configuration",permalink:"/alto/docs/tutorial-basics/project-configuration"}},c={},m=[{value:"Where do I store secrets?",id:"where-do-i-store-secrets",level:2},{value:"The .env file",id:"the-env-file",level:3},{value:"The alto.local.toml file",id:"the-altolocaltoml-file",level:3}],p={toc:m},d="wrapper";function f(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"secret-management"},"Secret Management"),(0,r.kt)("h2",{id:"where-do-i-store-secrets"},"Where do I store secrets?"),(0,r.kt)("h3",{id:"the-env-file"},"The .env file"),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"This file should be gitignored. It is not intended to be committed to your repository.")),(0,r.kt)("p",null,"The most common approach to managing secrets is a ",(0,r.kt)("inlineCode",{parentName:"p"},".env")," file. ",(0,r.kt)("inlineCode",{parentName:"p"},"alto")," will read the ",(0,r.kt)("inlineCode",{parentName:"p"},".env")," file in the same directory as the ",(0,r.kt)("inlineCode",{parentName:"p"},"alto.toml")," and use those values as environment variables. This is very useful for storing secrets that you don't want to commit to your repository because it unifies the developer and deployment experience. During production deployments, you can use any of the many tools available to manage secrets in production environments which use environment variables as a common denominator. It is also useful for Github Actions and CI workflows. The ",(0,r.kt)("inlineCode",{parentName:"p"},"alto init")," command will create this file for you."),(0,r.kt)("p",null,"To reference environment variables in your ",(0,r.kt)("inlineCode",{parentName:"p"},"alto.toml")," file, you can use the ",(0,r.kt)("inlineCode",{parentName:"p"},"@format {env[VARIABLE_NAME]}")," syntax. For example, if you have a variable named ",(0,r.kt)("inlineCode",{parentName:"p"},"MY_SECRET")," in your ",(0,r.kt)("inlineCode",{parentName:"p"},".env")," file or in the environment, you can reference it in your ",(0,r.kt)("inlineCode",{parentName:"p"},"alto.toml")," file like this:"),(0,r.kt)(o.Z,{mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"toml",label:"TOML",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-toml",metastring:'title="alto.toml"',title:'"alto.toml"'},'[default.taps.tap-name]\nconfig.my_secret_key = "@format {env[MY_SECRET]}"\nconfig.my_notsosecret_id = "12345"\n'))),(0,r.kt)(l.Z,{value:"yaml",label:"YAML",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="alto.yaml"',title:'"alto.yaml"'},'default:\n  taps:\n    tap-name:\n      config:\n        my_secret_key: "@format {env[MY_SECRET]}"\n        my_notsosecret_id: "12345"\n'))),(0,r.kt)(l.Z,{value:"json",label:"JSON",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="alto.json"',title:'"alto.json"'},'{\n  "default": {\n    "taps": {\n      "tap-name": {\n        "config": {\n          "my_secret_key": "@format {env[MY_SECRET]}",\n          "my_notsosecret_id": "12345"\n        }\n      }\n    }\n  }\n}\n')))),(0,r.kt)("p",null,"There is an entire section on dynamic values in the Dynaconf documentation that you can read more about ",(0,r.kt)("a",{parentName:"p",href:"https://www.dynaconf.com/dynamic/"},"here"),"."),(0,r.kt)("h3",{id:"the-altolocaltoml-file"},"The alto.local.toml file"),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"This file should be gitignored. It is not intended to be committed to your repository.")),(0,r.kt)("p",null,"Secrets ",(0,r.kt)("em",{parentName:"p"},"can")," be stored in the ",(0,r.kt)("inlineCode",{parentName:"p"},"alto.local.toml")," file. This file is optional. Alto will look for this file in the current directory when you run a command and merge it into ",(0,r.kt)("inlineCode",{parentName:"p"},"alto.toml")," at runtime. The ",(0,r.kt)("inlineCode",{parentName:"p"},"alto init")," command will create this file for you. The primary purpose of this file is to enable developer specific overrides. It lets you add entire configuration blocks such as ",(0,r.kt)("inlineCode",{parentName:"p"},"taps"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"targets"),", or more often ",(0,r.kt)("inlineCode",{parentName:"p"},"utilities")," that you want to use in your ",(0,r.kt)("em",{parentName:"p"},"personal")," environment, and it can be thought of as a set of local overrides/settings. Ensure prod environments either do not rely on this file or that you have a way to inject the file into the environment at runtime. The ",(0,r.kt)("inlineCode",{parentName:"p"},".env")," / environment variable approach is a better way to manage secrets in production environments."))}f.isMDXComponent=!0}}]);