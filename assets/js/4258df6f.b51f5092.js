"use strict";(self.webpackChunkalto_docs=self.webpackChunkalto_docs||[]).push([[684],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var u=a.createContext({}),s=function(e){var t=a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=s(e.components);return a.createElement(u.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,u=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),p=s(n),m=i,f=p["".concat(u,".").concat(m)]||p[m]||d[m]||r;return n?a.createElement(f,l(l({ref:t},c),{},{components:n})):a.createElement(f,l({ref:t},c))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,l=new Array(r);l[0]=m;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o[p]="string"==typeof e?e:i,l[1]=o;for(var s=2;s<r;s++)l[s]=n[s];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5162:(e,t,n)=>{n.d(t,{Z:()=>l});var a=n(7294),i=n(6010);const r={tabItem:"tabItem_Ymn6"};function l(e){let{children:t,hidden:n,className:l}=e;return a.createElement("div",{role:"tabpanel",className:(0,i.Z)(r.tabItem,l),hidden:n},t)}},4866:(e,t,n)=>{n.d(t,{Z:()=>w});var a=n(7462),i=n(7294),r=n(6010),l=n(2466),o=n(6550),u=n(1980),s=n(7392),c=n(12);function p(e){return function(e){return i.Children.map(e,(e=>{if((0,i.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:i}}=e;return{value:t,label:n,attributes:a,default:i}}))}function d(e){const{values:t,children:n}=e;return(0,i.useMemo)((()=>{const e=t??p(n);return function(e){const t=(0,s.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function m(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function f(e){let{queryString:t=!1,groupId:n}=e;const a=(0,o.k6)(),r=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,u._X)(r),(0,i.useCallback)((e=>{if(!r)return;const t=new URLSearchParams(a.location.search);t.set(r,e),a.replace({...a.location,search:t.toString()})}),[r,a])]}function h(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,r=d(e),[l,o]=(0,i.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:r}))),[u,s]=f({queryString:n,groupId:a}),[p,h]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,r]=(0,c.Nk)(n);return[a,(0,i.useCallback)((e=>{n&&r.set(e)}),[n,r])]}({groupId:a}),y=(()=>{const e=u??p;return m({value:e,tabValues:r})?e:null})();(0,i.useLayoutEffect)((()=>{y&&o(y)}),[y]);return{selectedValue:l,selectValue:(0,i.useCallback)((e=>{if(!m({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);o(e),s(e),h(e)}),[s,h,r]),tabValues:r}}var y=n(2389);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function g(e){let{className:t,block:n,selectedValue:o,selectValue:u,tabValues:s}=e;const c=[],{blockElementScrollPositionUntilNextRender:p}=(0,l.o5)(),d=e=>{const t=e.currentTarget,n=c.indexOf(t),a=s[n].value;a!==o&&(p(t),u(a))},m=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const n=c.indexOf(e.currentTarget)+1;t=c[n]??c[0];break}case"ArrowLeft":{const n=c.indexOf(e.currentTarget)-1;t=c[n]??c[c.length-1];break}}t?.focus()};return i.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":n},t)},s.map((e=>{let{value:t,label:n,attributes:l}=e;return i.createElement("li",(0,a.Z)({role:"tab",tabIndex:o===t?0:-1,"aria-selected":o===t,key:t,ref:e=>c.push(e),onKeyDown:m,onClick:d},l,{className:(0,r.Z)("tabs__item",b.tabItem,l?.className,{"tabs__item--active":o===t})}),n??t)})))}function k(e){let{lazy:t,children:n,selectedValue:a}=e;if(n=Array.isArray(n)?n:[n],t){const e=n.find((e=>e.props.value===a));return e?(0,i.cloneElement)(e,{className:"margin-top--md"}):null}return i.createElement("div",{className:"margin-top--md"},n.map(((e,t)=>(0,i.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function v(e){const t=h(e);return i.createElement("div",{className:(0,r.Z)("tabs-container",b.tabList)},i.createElement(g,(0,a.Z)({},e,t)),i.createElement(k,(0,a.Z)({},e,t)))}function w(e){const t=(0,y.Z)();return i.createElement(v,(0,a.Z)({key:String(t)},e))}},1076:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>u,default:()=>f,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var a=n(7462),i=(n(7294),n(3905)),r=n(4866),l=n(5162);const o={},u="Utility Configuration",s={unversionedId:"tutorial-basics/utility-configuration",id:"tutorial-basics/utility-configuration",title:"Utility Configuration",description:"Adding a new utility to your project is as simple as adding a new key to the utilities section of the alto.toml file. The key is a user defined name for the tap and the value is a dictionary of configuration options for that tap.",source:"@site/docs/tutorial-basics/utility-configuration.mdx",sourceDirName:"tutorial-basics",slug:"/tutorial-basics/utility-configuration",permalink:"/alto/docs/tutorial-basics/utility-configuration",draft:!1,editUrl:"https://github.com/z3z1ma/alto/tree/main/docs/docs/tutorial-basics/utility-configuration.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Target Configuration",permalink:"/alto/docs/tutorial-basics/target-configuration"}},c={},p=[{value:"Example Utility Configuration",id:"example-utility-configuration",level:2},{value:"Settings",id:"settings",level:2},{value:"<code>pip_url</code>",id:"pip_url",level:3},{value:"<code>executable</code> and <code>entrypoint</code>",id:"executable-and-entrypoint",level:3},{value:"<code>environment</code>",id:"environment",level:3},{value:"Closing Thoughts on Utilities",id:"closing-thoughts-on-utilities",level:2}],d={toc:p},m="wrapper";function f(e){let{components:t,...n}=e;return(0,i.kt)(m,(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"utility-configuration"},"Utility Configuration"),(0,i.kt)("p",null,"Adding a new utility to your project is ",(0,i.kt)("strong",{parentName:"p"},"as simple as adding a new key")," to the ",(0,i.kt)("inlineCode",{parentName:"p"},"utilities")," section of the ",(0,i.kt)("inlineCode",{parentName:"p"},"alto.toml")," file. The key is a user defined name for the tap and the value is a dictionary of configuration options for that tap."),(0,i.kt)("h2",{id:"example-utility-configuration"},"Example Utility Configuration"),(0,i.kt)("p",null,"Here is a mock example of 1 utility configuration, as you can see it can be quite concise:"),(0,i.kt)(r.Z,{mdxType:"Tabs"},(0,i.kt)(l.Z,{value:"toml",label:"TOML",default:!0,mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-toml",metastring:'title="alto.toml"',title:'"alto.toml"'},'[default.utilities.dlt] # https://dlthub.com/docs/intro\npip_url = "python-dlt[duckdb]>=0.2.0a25"\nenvironment.PEX_INHERIT_PATH = "fallback"\n'))),(0,i.kt)(l.Z,{value:"yaml",label:"YAML",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="alto.yaml"',title:'"alto.yaml"'},'default:\n  utilities:\n    dlt: # https://dlthub.com/docs/intro\n      pip_url: "python-dlt[duckdb]>=0.2.0a25"\n      environment:\n        PEX_INHERIT_PATH: "fallback"\n'))),(0,i.kt)(l.Z,{value:"json",label:"JSON",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="alto.json"',title:'"alto.json"'},'{\n  "default": {\n    "utilities": {\n      "dlt": {\n        "pip_url": "python-dlt[duckdb]>=0.2.0a25",\n        "environment": {\n          "PEX_INHERIT_PATH": "fallback"\n        }\n      }\n    }\n  }\n}\n')))),(0,i.kt)("p",null,"Below, we will go over each of the configuration options for a utility."),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"settings"},"Settings"),(0,i.kt)("h3",{id:"pip_url"},(0,i.kt)("inlineCode",{parentName:"h3"},"pip_url")),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"pip_url")," is the pip installable URL of the utility. This is the same URL that you would use to install the utility via ",(0,i.kt)("inlineCode",{parentName:"p"},"pip install"),". This is the only required field for a utility configuration."),(0,i.kt)("admonition",{title:"Tip",type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"Remember pip installable URLs can be a local path to a directory, tarball, zip file, or a git repo. Anything that can be used by ",(0,i.kt)("inlineCode",{parentName:"p"},"pip")," can be used by ",(0,i.kt)("inlineCode",{parentName:"p"},"alto"),".")),(0,i.kt)("h3",{id:"executable-and-entrypoint"},(0,i.kt)("inlineCode",{parentName:"h3"},"executable")," and ",(0,i.kt)("inlineCode",{parentName:"h3"},"entrypoint")),(0,i.kt)("p",null,"By default, ",(0,i.kt)("inlineCode",{parentName:"p"},"alto")," will assume that the target exposes a script named after the target key name in the alto config. For example, if the target is named ",(0,i.kt)("inlineCode",{parentName:"p"},"sqlfluff"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"alto")," will assume that the target exposes a script named ",(0,i.kt)("inlineCode",{parentName:"p"},"sqlfluff"),". If this is not the case, you can specify the ",(0,i.kt)("inlineCode",{parentName:"p"},"executable")," explicitly. You can alternatively specify the ",(0,i.kt)("inlineCode",{parentName:"p"},"entrypoint")," if the package does not expose a script or you want to use something other than the default."),(0,i.kt)("h3",{id:"environment"},(0,i.kt)("inlineCode",{parentName:"h3"},"environment")),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"environment")," field is a dictionary of environment variables that will be set when running the target. It is fully scoped to the target and will not affect other processes."),(0,i.kt)("h2",{id:"closing-thoughts-on-utilities"},"Closing Thoughts on Utilities"),(0,i.kt)("p",null,"A utility is ",(0,i.kt)("strong",{parentName:"p"},"any")," python package that you want to use in your project that is not a tap or a target. These are things you want to use in your project but might not want to install into the Docker container / venv. For example, you might want to use sqlfluff to lint your SQL files. You can add it to the ",(0,i.kt)("inlineCode",{parentName:"p"},"utilities")," section and ",(0,i.kt)("inlineCode",{parentName:"p"},"alto")," will automatically manage building it, caching it, and running it for you. It is easily accessible via ",(0,i.kt)("inlineCode",{parentName:"p"},"alto invoke [plugin_name] [args]"),". The ",(0,i.kt)("inlineCode",{parentName:"p"},"alto invoke [plugin_name]")," command will pull the plugin just-in-time if needed. This keeps your Docker container and dependency tree lighter. ",(0,i.kt)("inlineCode",{parentName:"p"},"alto")," itself is still lean enough to sit next to heavier data tools like ",(0,i.kt)("inlineCode",{parentName:"p"},"dbt"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"pandas"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"duckdb"),", and ",(0,i.kt)("inlineCode",{parentName:"p"},"airflow")," and not have much risk for conflict whilst enabling this new path for utility management."))}f.isMDXComponent=!0}}]);